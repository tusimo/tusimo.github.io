{"title":"AWS DMS 迁移 mysql timestamp 字段时区不同步问题","uid":"b6f658d57561344b4e34417fd24455ba","slug":"AWS-DMS-迁移-mysql-timestamp-字段时区不同步问题","date":"2022-10-21T10:31:00.000Z","updated":"2024-09-23T10:05:21.954Z","comments":true,"path":"api/articles/AWS-DMS-迁移-mysql-timestamp-字段时区不同步问题.json","keywords":"coding","cover":[],"content":"<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p>线上服务 使用<code>dms</code>迁移到 aws ,在迁移数据库的时候遇到 <code>timestamp</code> 字段迁移出现时区不同步问题.<br>在 <code>dms</code> 使用<code>fullload</code>全量 和<code>cdc</code>增量模式时.<code>fullload</code>全量 的时区正常.<code>cdc</code>增量模式时区相差 8 个小时.</p>\n<h1 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h1><p>我们源数据库在腾讯云上.<code>mysql</code>版本 5.7.时区为<code>Asia/Shanghai</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show global variables like <span class=\"string\">&#x27;%time_zone%&#x27;</span>;</span></span><br><span class=\"line\">+------------------+--------+</span><br><span class=\"line\">| Variable_name    | Value  |</span><br><span class=\"line\">+------------------+--------+</span><br><span class=\"line\">| system_time_zone | CST    |</span><br><span class=\"line\">| time_zone        | SYSTEM |</span><br><span class=\"line\">+------------------+--------+</span><br><span class=\"line\">2 rows in set (0.09 sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>目标数据库在 aws 上,<code>mysql</code>版本为 5.7.时区为<code>Asia/Shanghai</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show global variables like <span class=\"string\">&#x27;%time_zone%&#x27;</span>;</span></span><br><span class=\"line\">+------------------+---------------+</span><br><span class=\"line\">| Variable_name    | Value         |</span><br><span class=\"line\">+------------------+---------------+</span><br><span class=\"line\">| system_time_zone | UTC           |</span><br><span class=\"line\">| time_zone        | Asia/Shanghai |</span><br><span class=\"line\">+------------------+---------------+</span><br><span class=\"line\">2 rows in set (0.08 sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>DMS</code>的 <code>source endpoint</code> 设置 <code>ServerTimezone</code>为<code>Asia/Shanghai</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;Port&quot;: 63642,</span><br><span class=\"line\">    &quot;ServerName&quot;: &quot;*****&quot;,</span><br><span class=\"line\">    &quot;ServerTimezone&quot;: &quot;Asia/Shanghai&quot;,</span><br><span class=\"line\">    &quot;Username&quot;: &quot;****&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>DMS</code>的<code>target endpoint</code> 没做额外的时区配置.</p>\n<p>我们在启动<code>dms</code>同步时,发现在全量模式下,<code>timestamp</code>字段的值是正常的.全量同步完进行增量同步的时候时区就相差 8 个小时.然而数据的插入时区也是正常的.配置当时参考了这个<a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/dms-migrate-mysql-non-utc/\">https://aws.amazon.com/premiumsupport/knowledge-center/dms-migrate-mysql-non-utc/</a></p>\n<h1 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h1><p>在尝试无果后,咨询了<code>AWS</code>的技术人员.得到了一个令人诧异的答案.当时就<code>emo</code>了.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">with batch-optimization，you need to use serverTimezone=Asia/Shanghai at the source endpoint like what you have done before.</span><br><span class=\"line\">without batch-optimization，you need to use initstmt=SET time_zone=&#x27;Asia/Shanghai in ECA at the source endpoint.</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/pasted-13.png\" alt=\"upload successful\"></p>\n<p>原来在<code>dms</code>里面存在一个 批量插入优化的选项.当我们在<code>source endpoint</code> ,使用<code>ServerTimezone</code>这个设置的时候,必须要开启这个批量优化的选项.不开启就会出现时区问题.开启了就正常了.<br><code>dms</code>还有一个设置时区的方法.就是使用<code>Extra connection attributes</code>.</p>\n<p>如下图,两种配置的设置位置,任选一种设置,但是不同的设置要使用不同的<code>batch-optimization</code>配置:</p>\n<p><img src=\"/images/pasted-14.png\" alt=\"upload successful\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">配置</th>\n<th align=\"center\">batch-optimization配置</th>\n<th align=\"center\">结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">使用ServerTimezone&#x3D;Asia&#x2F;Shanghai</td>\n<td align=\"center\">开启</td>\n<td align=\"center\">时区均正常</td>\n</tr>\n<tr>\n<td align=\"center\">使用ServerTimezone&#x3D;Asia&#x2F;Shanghai</td>\n<td align=\"center\">不开启</td>\n<td align=\"center\">全量正常,增量同步时区不正常</td>\n</tr>\n<tr>\n<td align=\"center\">使用initstmt&#x3D;SET time_zone&#x3D;’Asia&#x2F;Shanghai’</td>\n<td align=\"center\">开启</td>\n<td align=\"center\">全量正常,增量同步时区不正常</td>\n</tr>\n<tr>\n<td align=\"center\">使用initstmt&#x3D;SET time_zone&#x3D;’Asia&#x2F;Shanghai’</td>\n<td align=\"center\">不开启</td>\n<td align=\"center\">时区均正常</td>\n</tr>\n</tbody></table>\n<p>由于<code>batch-optimization</code>默认是不开启的,所以建议配置使用initstmt&#x3D;SET time_zone&#x3D;’Asia&#x2F;Shanghai’.</p>\n<p>由于腾讯云的数据库里面没有<code>Asia/Shanghai</code>这个时区的配置,我这里使用的是initstmt&#x3D;SET time_zone&#x3D;’+08:00’,效果是一样的.</p>\n<p>不要两个一起都设置.你会发现时区都不对了.</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>这个问题困扰了很久.在得知是由于开启关闭批量插入优化导致时区不正常就非常难受.<br>总结也不想写了.就这样吧.</p>\n","feature":true,"text":"问题线上服务 使用dms迁移到 aws ,在迁移数据库的时候遇到 timestamp 字段迁移出现时区不同步问题.在 dms 使用fullload全量 和cdc...","permalink":"/post/AWS-DMS-迁移-mysql-timestamp-字段时区不同步问题","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"mysql","slug":"mysql","count":1,"path":"api/tags/mysql.json"},{"name":"dms","slug":"dms","count":1,"path":"api/tags/dms.json"},{"name":"cdc","slug":"cdc","count":1,"path":"api/tags/cdc.json"},{"name":"fulload","slug":"fulload","count":1,"path":"api/tags/fulload.json"},{"name":"timestamp","slug":"timestamp","count":1,"path":"api/tags/timestamp.json"},{"name":"timezone","slug":"timezone","count":1,"path":"api/tags/timezone.json"},{"name":"时区","slug":"时区","count":1,"path":"api/tags/时区.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">调试</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3\"><span class=\"toc-text\">解决</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"tusimo","slug":"tusimo","avatar":"https://avatars.githubusercontent.com/u/4344635?v=4","link":"https://github.com/tusimo","description":"Think like an artist, code like an artisan.","socials":{"github":"https://tusimo.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Grafana 图表增加 Annotation 标记发布信息","uid":"f2bb7a23572ffaf10b751ed9095c199d","slug":"Grafana-图表增加-Annotation-标记发布信息","date":"2024-09-23T06:26:00.000Z","updated":"2024-09-23T10:05:21.954Z","comments":true,"path":"api/articles/Grafana-图表增加-Annotation-标记发布信息.json","keywords":"coding","cover":[],"text":"目的 对于已经绘制好的 grafana 的图表,我们在看到一些指标突然异常的时候,往往希望知道这个异常时间点到底发生了什么才导致指标异常的.这个时候排查可能会查...","permalink":"/post/Grafana-图表增加-Annotation-标记发布信息","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[],"tags":[{"name":"grafana","slug":"grafana","count":1,"path":"api/tags/grafana.json"},{"name":"annotation","slug":"annotation","count":1,"path":"api/tags/annotation.json"},{"name":"gitlab","slug":"gitlab","count":1,"path":"api/tags/gitlab.json"},{"name":"ci/cd","slug":"ci-cd","count":1,"path":"api/tags/ci-cd.json"}],"author":{"name":"tusimo","slug":"tusimo","avatar":"https://avatars.githubusercontent.com/u/4344635?v=4","link":"https://github.com/tusimo","description":"Think like an artist, code like an artisan.","socials":{"github":"https://tusimo.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"腾讯云 redis 迁移AWS的若干问题","uid":"5787a32e0acc329c90bb7d6138b83d3a","slug":"腾讯云-redis-迁移AWS的若干问题","date":"2022-08-22T07:09:00.000Z","updated":"2024-09-23T10:05:21.955Z","comments":true,"path":"api/articles/腾讯云-redis-迁移AWS的若干问题.json","keywords":"coding","cover":null,"text":"redis 迁移全量迁移 全量迁移比较简单,可以采用以下两种方式进行迁移. 1 rdb 导入导出 2 scan keys 进行同步 以上方式可以通过 redis...","permalink":"/post/腾讯云-redis-迁移AWS的若干问题","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"redis","slug":"redis","count":1,"path":"api/categories/redis.json"}],"tags":[{"name":"redis","slug":"redis","count":1,"path":"api/tags/redis.json"},{"name":"腾讯云","slug":"腾讯云","count":1,"path":"api/tags/腾讯云.json"},{"name":"redis-shake","slug":"redis-shake","count":1,"path":"api/tags/redis-shake.json"},{"name":"riot-redis","slug":"riot-redis","count":1,"path":"api/tags/riot-redis.json"}],"author":{"name":"tusimo","slug":"tusimo","avatar":"https://avatars.githubusercontent.com/u/4344635?v=4","link":"https://github.com/tusimo","description":"Think like an artist, code like an artisan.","socials":{"github":"https://tusimo.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}