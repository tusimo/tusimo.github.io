{"title":"php 容器化的几点建议","uid":"b14c7bb0c256981c822f52d59e144945","slug":"php-容器化的几点建议","date":"2022-08-10T10:15:00.000Z","updated":"2022-08-11T08:41:54.468Z","comments":true,"path":"api/articles/php-容器化的几点建议.json","keywords":"coding","cover":"https://images.pexels.com/photos/1044990/pexels-photo-1044990.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","content":"<h1 id=\"镜像编译\"><a href=\"#镜像编译\" class=\"headerlink\" title=\"镜像编译\"></a>镜像编译</h1><h2 id=\"基础镜像编译\"><a href=\"#基础镜像编译\" class=\"headerlink\" title=\"基础镜像编译\"></a>基础镜像编译</h2><p><a href=\"https://github.com/tusimo/docker-php-fpm\">github repo</a></p>\n<p>基础镜像编译使用环境变量替换配置.</p>\n<pre class=\"line-numbers language-Dockerfile\" data-language=\"Dockerfile\"><code class=\"language-Dockerfile\">\nFROM php:7.2-fpm-alpine\n\n# replace repositories\nRUN sed -i &#39;s&#x2F;dl-cdn.alpinelinux.org&#x2F;mirrors.cloud.tencent.com&#x2F;g&#39; &#x2F;etc&#x2F;apk&#x2F;repositories\n\n# add timezone\nRUN apk add -u --no-cache tzdata \\\n &amp;&amp; cp &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime\n\nRUN apk upgrade &amp;&amp; \\\n    apk add --no-cache curl \\\n        boost-dev \\\n        git \\\n        ca-certificates \\\n        automake \\\n        libtool \\\n        file \\\n        linux-headers \\\n        re2c \\\n        pkgconf \\\n        openssl-dev \\\n        curl-dev \\\n        autoconf \\\n        openssl \\\n        gcc \\\n        make \\\n        g++ \\\n        zlib-dev \\\n        graphviz \\\n        libpng-dev \\\n        libpq \\\n        icu-dev \\\n        libffi-dev \\\n        freetype-dev \\\n        libxslt-dev \\\n        libjpeg-turbo-dev \\\n        libwebp-dev \\\n        libmemcached-dev \\\n        libmcrypt-dev \\\n        libzip-dev \\\n        librdkafka-dev &amp;&amp; \\\n    docker-php-ext-configure gd \\\n      --with-gd \\\n      --with-freetype-dir&#x3D;&#x2F;usr&#x2F;include&#x2F; \\\n      --with-png-dir&#x3D;&#x2F;usr&#x2F;include&#x2F; \\\n      --with-jpeg-dir&#x3D;&#x2F;usr&#x2F;include&#x2F; \\\n      --with-webp-dir&#x3D;&#x2F;usr&#x2F;include&#x2F; &amp;&amp; \\\n    docker-php-ext-install fileinfo pdo_mysql mysqli gd exif intl xsl soap zip opcache sockets bcmath pcntl &amp;&amp; \\\n    docker-php-source delete\n\nRUN pecl install redis-5.0.2 memcached-3.1.4 rdkafka yaf-3.0.8 yar-2.0.5 mcrypt hprose-1.6.8 \\\n    &amp;&amp; docker-php-ext-enable redis memcached rdkafka yaf yar mcrypt hprose\n\n\nRUN wget https:&#x2F;&#x2F;storage.googleapis.com&#x2F;downloads.webmproject.org&#x2F;releases&#x2F;webp&#x2F;libwebp-1.1.0.tar.gz -O &#x2F;tmp&#x2F;libwebp-1.1.0.tar.gz \\\n    &amp;&amp; tar -C &#x2F;tmp -zxvf &#x2F;tmp&#x2F;libwebp-1.1.0.tar.gz \\\n    &amp;&amp; cd &#x2F;tmp&#x2F;libwebp-1.1.0 \\\n    &amp;&amp; .&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;libwebp --enable-everything \\\n    &amp;&amp; make &amp;&amp; make install\n\nRUN apk del autoconf gcc make g++ \\\n    &amp;&amp; rm -fr &#x2F;var&#x2F;cache&#x2F;apk&#x2F;* &#x2F;tmp&#x2F;* &#x2F;usr&#x2F;share&#x2F;man\n\nWORKDIR &#x2F;var&#x2F;www&#x2F;html\n\n# use env control php and php-fpm\n\nENV TZ&#x3D;Asia&#x2F;Shanghai\nENV APP_ENV&#x3D;product\nENV PHP_DATE_TIMEZONE&#x3D;&quot;Asia&#x2F;Shanghai&quot;\nENV PHP_ERROR_LOG&#x3D;&quot;&#x2F;proc&#x2F;self&#x2F;fd&#x2F;2&quot;\nENV PHP_LOG_LEVEL&#x3D;&quot;notice&quot;\nENV PHP_PROCESS_MAX&#x3D;0\nENV PHP_RLIMIT_FILES&#x3D;51200\nENV PHP_RLIMIT_CORE&#x3D;0\nENV PHP_USER&#x3D;www-data\nENV PHP_GROUP&#x3D;www-data\nENV PHP_LISTEN&#x3D;0.0.0.0:9000\nENV PHP_PM&#x3D;static\nENV PHP_PM_MAX_CHILDREN&#x3D;20\nENV PHP_PM_START_SERVERS&#x3D;4\nENV PHP_PM_MIN_SPARE_SERVERS&#x3D;2\nENV PHP_PM_MAX_SPARE_SERVERS&#x3D;10\nENV PHP_PM_PROCESS_IDLE_TIMEOUT&#x3D;10s\nENV PHP_PM_MAX_REQUESTS&#x3D;10000\nENV PHP_SLOWLOG&#x3D;&quot;&#x2F;proc&#x2F;self&#x2F;fd&#x2F;2&quot;\nENV PHP_REQUEST_SLOWLOG_TIMEOUT&#x3D;&quot;2s&quot;\nENV PHP_REQUEST_TERMINATE_TIMEOUT&#x3D;&quot;120s&quot;\nENV PHP_MAX_EXECUTION_TIME&#x3D;600\nENV PHP_MAX_INPUT_TIME&#x3D;60\nENV PHP_MEMORY_LIMIT&#x3D;384M\nENV PHP_ERROR_REPORTING&#x3D;&quot;E_ALL &amp; ~E_DEPRECATED &amp; ~E_STRICT&quot;\nENV PHP_DISPLAY_ERRORS&#x3D;&quot;Off&quot;\nENV PHP_DISPLAY_STARTUP_ERRORS&#x3D;&quot;Off&quot;\nENV PHP_POST_MAX_SIZE&#x3D;100M\nENV PHP_UPLOAD_MAX_FILESIZE&#x3D;50M\nENV PHP_MAX_FILE_UPLOADS&#x3D;20\nENV PHP_ACCESS_LOG&#x3D;&quot;&#x2F;dev&#x2F;null&quot;\nENV PHP_TRACK_ERRORS&#x3D;Off\nENV PHP_ACCESS_FORMAT&#x3D;&quot;&#123; \\&quot;type\\&quot;: \\&quot;access\\&quot;, \\&quot;time\\&quot;: \\&quot;%t\\&quot;, \\&quot;environment\\&quot;: \\&quot;%&#123;APP_ENV&#125;e\\&quot;, \\&quot;method\\&quot;: \\&quot;%m\\&quot;, \\&quot;request_uri\\&quot;: \\&quot;%r%Q%q\\&quot;, \\&quot;status_code\\&quot;: \\&quot;%s\\&quot;, \\&quot;cost_time\\&quot;: %&#123;mili&#125;d, \\&quot;cpu_usage\\&quot;: &#123; \\&quot;user\\&quot; : %&#123;user&#125;C, \\&quot;system\\&quot;: %&#123;system&#125;C, \\&quot;total\\&quot;: %&#123;total&#125;C &#125;, \\&quot;memory_usage\\&quot;: %&#123;bytes&#125;M, \\&quot;remote_ip\\&quot;: \\&quot;%R\\&quot;, \\&quot;module\\&quot;: \\&quot;php-fpm\\&quot;, \\&quot;log_type\\&quot;: \\&quot;access-log\\&quot; &#125;&quot;\n\n\nENV PHP_YAF_USE_NAMESPACE&#x3D;Off\nENV PHP_YAF_USE_SPL_AUTOLOAD&#x3D;On\nENV PHP_YAR_CONNECT_TIMEOUT&#x3D;1000\nENV PHP_YAR_TIMEOUT&#x3D;5000\nENV PHP_YAR_DEBUG&#x3D;off\n\nENV PHP_OPCACHE_ENABLE&#x3D;1\nENV PHP_OPCACHE_ENABLE_CLI&#x3D;1\nENV PHP_OPCACHE_MEMORY_CONSUMPTION&#x3D;128\nENV PHP_OPCACHE_INTERNED_STRINGS_BUFFER&#x3D;8\nENV PHP_OPCACHE_MAX_ACCELERATED_FILES&#x3D;100000\nENV PHP_OPCACHE_MAX_WASTED_PERCENTAGE&#x3D;5\nENV PHP_OPCACHE_USE_CWD&#x3D;1\nENV PHP_OPCACHE_VALIDATE_TIMESTAMPS&#x3D;0\nENV PHP_OPCACHE_REVALIDATE_FREQ&#x3D;0\nENV PHP_OPCACHE_FAST_SHUTDOWN&#x3D;1\nENV PHP_OPCACHE_CONSISTENCY_CHECKS&#x3D;0\nENV PHP_OPCACHE_BLACKLIST_FILENAME&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;.opcacheignore\n\n\nCOPY php-config&#x2F;php.ini &quot;$PHP_INI_DIR&quot;\nCOPY php-config&#x2F;conf.d&#x2F; &quot;$PHP_INI_DIR&quot;&#x2F;conf.d&#x2F;\nCOPY php-config&#x2F;php-fpm.conf &#x2F;usr&#x2F;local&#x2F;etc&#x2F;\nCOPY php-config&#x2F;www.conf &#x2F;usr&#x2F;local&#x2F;etc&#x2F;php-fpm.d&#x2F;\n\nEXPOSE 9000\n\nRUN rm -fr &#x2F;usr&#x2F;local&#x2F;etc&#x2F;php-fpm.d&#x2F;zz-docker.conf\nCOPY docker-entrypoint.sh &#x2F;usr&#x2F;local&#x2F;bin&#x2F;\n\nENTRYPOINT [&quot;docker-entrypoint.sh&quot;]\n\nCMD [&quot;php-fpm&quot;]\n\n</code></pre>\n\n<p>通过环境变量控制程序的行为.替换 php 的配置为 <code>$&#123;XXX&#125;</code>, 然后在<code>Dockerfile</code>中设置该环境变量.后续容器在运行时,可以通过改变环境变量来修改运行时的配置.</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">;;;;;;;;;;;;;;;;;;;;;\n; FPM Configuration ;\n;;;;;;;;;;;;;;;;;;;;;\n\n; All relative paths in this configuration file are relative to PHP&#39;s install\n; prefix (&#x2F;usr&#x2F;local). This prefix can be dynamically changed by using the\n; &#39;-p&#39; argument from the command line.\n\n;;;;;;;;;;;;;;;;;;\n; Global Options ;\n;;;;;;;;;;;;;;;;;;\n\n[global]\n; Pid file\n; Note: the default prefix is &#x2F;usr&#x2F;local&#x2F;var\n; Default Value: none\n;pid &#x3D; run&#x2F;php-fpm.pid\n\n; Error log file\n; If it&#39;s set to &quot;syslog&quot;, log is sent to syslogd instead of being written\n; into a local file.\n; Note: the default prefix is &#x2F;usr&#x2F;local&#x2F;var\n; Default Value: log&#x2F;php-fpm.log\nerror_log &#x3D; $&#123;PHP_ERROR_LOG&#125;\n\n; syslog_facility is used to specify what type of program is logging the\n; message. This lets syslogd specify that messages from different facilities\n; will be handled differently.\n; See syslog(3) for possible values (ex daemon equiv LOG_DAEMON)\n; Default Value: daemon\n;syslog.facility &#x3D; daemon\n\n; syslog_ident is prepended to every message. If you have multiple FPM\n; instances running on the same server, you can change the default value\n; which must suit common needs.\n; Default Value: php-fpm\n;syslog.ident &#x3D; php-fpm\n\n; Log level\n; Possible Values: alert, error, warning, notice, debug\n; Default Value: notice\nlog_level &#x3D; $&#123;PHP_LOG_LEVEL&#125;\n\n; Log buffering specifies if the log line is buffered which means that the\n; line is written in a single write operation. If the value is false, then the\n; data is written directly into the file descriptor. It is an experimental\n; option that can potentionaly improve logging performance and memory usage\n; for some heavy logging scenarios. This option is ignored if logging to syslog\n; as it has to be always buffered.\n; Default value: yes\n;log_buffering &#x3D; no\n\n; If this number of child processes exit with SIGSEGV or SIGBUS within the time\n; interval set by emergency_restart_interval then FPM will restart. A value\n; of &#39;0&#39; means &#39;Off&#39;.\n; Default Value: 0\n;emergency_restart_threshold &#x3D; 0\n\n; Interval of time used by emergency_restart_interval to determine when\n; a graceful restart will be initiated.  This can be useful to work around\n; accidental corruptions in an accelerator&#39;s shared memory.\n; Available Units: s(econds), m(inutes), h(ours), or d(ays)\n; Default Unit: seconds\n; Default Value: 0\n;emergency_restart_interval &#x3D; 0\n\n; Time limit for child processes to wait for a reaction on signals from master.\n; Available units: s(econds), m(inutes), h(ours), or d(ays)\n; Default Unit: seconds\n; Default Value: 0\n;process_control_timeout &#x3D; 0\n\n; The maximum number of processes FPM will fork. This has been designed to control\n; the global number of processes when using dynamic PM within a lot of pools.\n; Use it with caution.\n; Note: A value of 0 indicates no limit\n; Default Value: 0\nprocess.max &#x3D; $&#123;PHP_PROCESS_MAX&#125;\n\n\n; Specify the nice(2) priority to apply to the master process (only if set)\n; The value can vary from -19 (highest priority) to 20 (lowest priority)\n; Note: - It will only work if the FPM master process is launched as root\n;       - The pool process will inherit the master process priority\n;         unless specified otherwise\n; Default Value: no set\n; process.priority &#x3D; -19\n\n; Send FPM to background. Set to &#39;no&#39; to keep FPM in foreground for debugging.\n; Default Value: yes\ndaemonize &#x3D; no\n\n; Set open file descriptor rlimit for the master process.\n; Default Value: system defined value\nrlimit_files &#x3D; $&#123;PHP_RLIMIT_FILES&#125;\n\n; Set max core size rlimit for the master process.\n; Possible Values: &#39;unlimited&#39; or an integer greater or equal to 0\n; Default Value: system defined value\n;rlimit_core &#x3D; 0\n\n; Specify the event mechanism FPM will use. The following is available:\n; - select     (any POSIX os)\n; - poll       (any POSIX os)\n; - epoll      (linux &gt;&#x3D; 2.5.44)\n; - kqueue     (FreeBSD &gt;&#x3D; 4.1, OpenBSD &gt;&#x3D; 2.9, NetBSD &gt;&#x3D; 2.0)\n; - &#x2F;dev&#x2F;poll  (Solaris &gt;&#x3D; 7)\n; - port       (Solaris &gt;&#x3D; 10)\n; Default Value: not set (auto detection)\nevents.mechanism &#x3D; epoll\n\n; When FPM is built with systemd integration, specify the interval,\n; in seconds, between health report notification to systemd.\n; Set to 0 to disable.\n; Available Units: s(econds), m(inutes), h(ours)\n; Default Unit: seconds\n; Default value: 10\n;systemd_interval &#x3D; 10\n\n;;;;;;;;;;;;;;;;;;;;\n; Pool Definitions ;\n;;;;;;;;;;;;;;;;;;;;\n\n; Multiple pools of child processes may be started with different listening\n; ports and different management options.  The name of the pool will be\n; used in logs and stats. There is no limitation on the number of pools which\n; FPM can handle. Your system will tell you anyway :)\n\n; Include one or more files. If glob(3) exists, it is used to include a bunch of\n; files from a glob(3) pattern. This directive can be used everywhere in the\n; file.\n; Relative path can also be used. They will be prefixed by:\n;  - the global prefix if it&#39;s been set (-p argument)\n;  - &#x2F;usr&#x2F;local otherwise\ninclude&#x3D;etc&#x2F;php-fpm.d&#x2F;*.conf</code></pre>\n\n<h2 id=\"服务镜像编译\"><a href=\"#服务镜像编译\" class=\"headerlink\" title=\"服务镜像编译\"></a>服务镜像编译</h2><p>往往 <code>php-fpm</code> 一般和 <code>nginx</code>配合来提供服务,  由于 <code>php-fpm</code> 与 <code>nginx</code> 是通过 <code>cgi</code> 通信, 所以在编译镜像的时候就要考虑<code>nginx</code> 和 <code>php-fpm</code>是如何通信和部署的.在传统的方式下,一般通过在宿主机部署<code>nginx</code> 和 <code>php-fpm</code>两个程序并通过 <code>cgi</code>进行通信.</p>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">\nserver &#123;\n    server_name _;\n\n    listen      80 default_server;\n\n    root        &#x2F;var&#x2F;www&#x2F;html;\n\n    index  index.php index.html index.htm;\n\n\tadd_header &#39;Access-Control-Allow-Origin&#39; &#39;*&#39;;\n\tadd_header &#39;Access-Control-Allow-Headers&#39; &#39;*&#39;;\n\tadd_header &#39;Access-Control-Allow-Methods&#39; &#39;*&#39;;\n\tif ($request_method &#x3D; &#39;OPTIONS&#39;) &#123;\n\t\t\treturn 204;\n\t&#125;\n\n\tlocation &#x2F;nginx-status &#123;\n        stub_status;\n\n        access_log off;\n        allow 127.0.0.1;\n        deny all;\n    &#125;\n\n\tlocation &#x2F; &#123;\n\t\ttry_files $uri $uri&#x2F; &#x2F;index.php$is_args$args;\n\t&#125;\n\n\tlocation &#x3D; &#x2F;favicon.ico &#123; access_log off; log_not_found off; &#125;\n    location &#x3D; &#x2F;robots.txt  &#123; access_log off; log_not_found off; &#125;\n\n\tlocation ~ \\.(jpg|jpeg|gif|png|css|js|ico|xml|swf)$ &#123;\n\t\tetag           on;\n\t\texpires        max;\n\t\taccess_log     off;\n\t\tlog_not_found  off;\n\t&#125;\n\t\n\tlocation ~ [^&#x2F;]\\.php(&#x2F;|$) &#123;\n\t\ttry_files $uri &#x3D;404;                      \n\t\tinclude        fastcgi_params;                                     \n\t\tfastcgi_index index.php;                                           \n\t\tfastcgi_split_path_info ^(.+\\.php)(&#x2F;.+)$;                          \n\t\tfastcgi_pass   unix:&#x2F;dev&#x2F;shm&#x2F;php-cgi.sock;                         \n\t\tfastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n\t&#125;\n\n\tlocation ~ &#x2F;\\.(?!well-known).* &#123;\n        deny all;\n    &#125;\n\n\t# return 404 for all other php files not matching the front controller\n    # this prevents access to other php files you don&#39;t want to be accessible.\n    location ~ \\.php$ &#123;\n\t\treturn 404;\n    &#125;\n&#125;\n</code></pre>\n\n<p>以上是一个通过 <code>unix socket</code>进行通信的方式,该配置对应 <code>php-fpm</code> 的配置为: <code>listen: /dev/shm/php-cgi.sock</code>. 该方式需要<code>nginx</code>和 <code>php-fpm</code>在同一个机器上.</p>\n<p>以上是一个通过 <code>unix socket</code>进行通信的方式,该配置对应 <code>php-fpm</code> 的配置为: <code>listen: /dev/shm/php-cgi.sock</code>. 该方式需要<code>nginx</code>和 <code>php-fpm</code>在同一个机器上.</p>\n<p>我们也可以使用网络进行通信.设置 <code>fastcgi_pass</code> 为 <code>127.0.0.1:9000</code> 以及 <code>php-fpm</code> 的 <code>listen:0.0.0.0:9000</code>.通过网络的方式不需要<code>nginx</code>和 <code>php-fpm</code>在同一个机器上.</p>\n<h3 id=\"php业务代码编译\"><a href=\"#php业务代码编译\" class=\"headerlink\" title=\"php业务代码编译\"></a>php业务代码编译</h3><div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<ul>\n<li>使用分阶段构建,编译和运行分开,减少不必要的资源引入</li>\n<li><code>composer</code>只在编译阶段引入,运行时无需开启</li>\n<li>基础 <code>php-fpm</code>使用小体积镜像</li>\n</ul>\n\n</div>\n<pre class=\"line-numbers language-Dockerfile\" data-language=\"Dockerfile\"><code class=\"language-Dockerfile\">\nARG BASE_TAG\n# First stage: build the executable.\nFROM composer AS builder\n\n# Set the working directory outside $GOPATH to enable the support for modules.\nWORKDIR &#x2F;src\n\n# Import the code from the context.\nCOPY .&#x2F;composer.json .&#x2F;composer.lock &#x2F;src&#x2F;\n\nRUN composer install --no-dev --prefer-dist --no-autoloader\n\nCOPY .&#x2F; &#x2F;src&#x2F;\n\nRUN composer dump-autoload -o &amp;&amp; composer clear-cache\n\n# Final stage: the running container.\nFROM php-fpm  AS final\n\n# Import the compiled executable from the first stage.\nCOPY --from&#x3D;builder &#x2F;src &#x2F;var&#x2F;www&#x2F;html\n\nWORKDIR &#x2F;var&#x2F;www&#x2F;html\n\nEXPOSE 9000\n</code></pre>\n\n<p>下面的图代表了两种打包方式:</p>\n<h3 id=\"分开打包\"><a href=\"#分开打包\" class=\"headerlink\" title=\"分开打包\"></a>分开打包</h3><p>将<code>nginx</code>和<code>php-fpm</code>分别打包成两个镜像.</p>\n<p><img src=\"/images/pasted-5.png\" alt=\"upload successful\"></p>\n<h3 id=\"合并打包\"><a href=\"#合并打包\" class=\"headerlink\" title=\"合并打包\"></a>合并打包</h3><p>将<code>nginx</code>和<code>php-fpm</code>打包到同一个镜像,使用<code>supervisor</code>,<code>pm2</code>等进程管理工具管理进程.</p>\n<p><img src=\"/images/pasted-6.png\" alt=\"upload successful\"></p>\n<h1 id=\"镜像部署\"><a href=\"#镜像部署\" class=\"headerlink\" title=\"镜像部署\"></a>镜像部署</h1><p>目前流行的部署方式一般都是部署到<code>kubernetes</code>中,所以我们以<code>kubernetes</code>部署为例来分析下几种不同部署方式的优缺点.</p>\n<h2 id=\"nginx-和-php-fpm-单独部署\"><a href=\"#nginx-和-php-fpm-单独部署\" class=\"headerlink\" title=\"nginx 和 php-fpm 单独部署\"></a>nginx 和 php-fpm 单独部署</h2><p>将<code>nginx</code>和<code>php-fpm</code>部署成两个<code>deployments</code>,使用<code>service</code>进行通信.</p>\n<p><img src=\"/images/pasted-7.png\" alt=\"upload successful\"></p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">优点</p>\n<p><ul>\n<li><code>nginx</code>和<code>php-fpm</code>可以进行单独扩缩容</li>\n<li><code>nginx</code>和<code>php-fpm</code>可以进行单独配置和更新,不相互影响</li>\n<li><code>nginx</code>和<code>php-fpm</code>使用网络进行通信</li>\n<li>发布代码简单,只需要更新 <code>php-fpm</code> 的镜像即可</li>\n<li>比较灵活,节省资源</li>\n</ul>\n</p>\n</div>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">缺点</p>\n<ul>\n<li>部署比较麻烦,需要同时暴露<code>80</code>,<code>9000</code>端口</li>\n<li>容器的健康检查需要单独检查,无法针对业务接口设置健康检查</li>\n</ul>\n\n</div>\n<h2 id=\"nginx-和-php-fpm-部署到同一个-pod\"><a href=\"#nginx-和-php-fpm-部署到同一个-pod\" class=\"headerlink\" title=\"nginx 和 php-fpm 部署到同一个 pod\"></a>nginx 和 php-fpm 部署到同一个 pod</h2><p>部署一个<code>deployments</code>并使用两个 <code>container</code>部署到同一个<code>pod</code>里面.<br><img src=\"/images/pasted-8.png\" alt=\"upload successful\"></p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">优点</p>\n<p><ul>\n<li>无需暴露<code>php-fpm</code>的端口,内部容器通过共享网络栈通信</li>\n<li>部署相对简单,通过<code>pod</code>内部署多个<code>container</code>进行协作完成服务工作</li>\n</ul>\n</p>\n</div>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">缺点</p>\n<ul>\n<li>扩缩容需要一起,无法单独扩缩容</li>\n<li>相对浪费资源</li>\n</ul>\n\n</div>\n<h2 id=\"nginx-和-php-fpm-共同打包部署到一个-pod\"><a href=\"#nginx-和-php-fpm-共同打包部署到一个-pod\" class=\"headerlink\" title=\"nginx 和 php-fpm 共同打包部署到一个 pod\"></a>nginx 和 php-fpm 共同打包部署到一个 pod</h2><p><img src=\"/images/pasted-9.png\" alt=\"upload successful\"></p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">优点</p>\n<p><ul>\n<li><code>pod</code>内只有一个<code>container</code>,部署简单</li>\n<li>可以检查服务的健康</li>\n</ul>\n</p>\n</div>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">缺点</p>\n<ul>\n<li>扩缩容需要一起,无法单独扩缩容</li>\n<li>浪费资源</li>\n</ul>\n\n</div>\n<h1 id=\"程序运行\"><a href=\"#程序运行\" class=\"headerlink\" title=\"程序运行\"></a>程序运行</h1><h2 id=\"php-fpm-pm-管理配置\"><a href=\"#php-fpm-pm-管理配置\" class=\"headerlink\" title=\"php-fpm pm 管理配置\"></a>php-fpm pm 管理配置</h2><p>在<code>kubernetes</code>中一般会使用<code>hpa</code>根据资源的消耗进行自动扩缩容.如果选用<code>ondemand</code>,<code>dynamic</code>的方式,内存使用会存在波动,如果针对内存使用进行<code>hpa</code>往往来不及等到调度<br>成功并运行新的<code>pod</code>进行服务.在内存充足的情况下使用<code>static</code>的方式固定内存使用.<code>hpa</code>可以只根据<code>cpu</code>进行 hpa会更好.</p>\n<p><code>PHP_PM_MAX_CHILDREN</code> 并不是越大越好.我们可以开启<code>php-fpm</code>自带的<code>metrics</code>来观察 php-fpm的使用情况.</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n; The URI to view the FPM status page. If this value is not set, no URI will be\n; recognized as a status page. It shows the following informations:\n;   pool                 - the name of the pool;\n;   process manager      - static, dynamic or ondemand;\n;   start time           - the date and time FPM has started;\n;   start since          - number of seconds since FPM has started;\n;   accepted conn        - the number of request accepted by the pool;\n;   listen queue         - the number of request in the queue of pending\n;                          connections (see backlog in listen(2));\n;   max listen queue     - the maximum number of requests in the queue\n;                          of pending connections since FPM has started;\n;   listen queue len     - the size of the socket queue of pending connections;\n;   idle processes       - the number of idle processes;\n;   active processes     - the number of active processes;\n;   total processes      - the number of idle + active processes;\n;   max active processes - the maximum number of active processes since FPM\n;                          has started;\n;   max children reached - number of times, the process limit has been reached,\n;                          when pm tries to start more children (works only for\n;                          pm &#39;dynamic&#39; and &#39;ondemand&#39;);\n; Value are updated in real time.\n; Example output:\n;   pool:                 www\n;   process manager:      static\n;   start time:           01&#x2F;Jul&#x2F;2011:17:53:49 +0200\n;   start since:          62636\n;   accepted conn:        190460\n;   listen queue:         0\n;   max listen queue:     1\n;   listen queue len:     42\n;   idle processes:       4\n;   active processes:     11\n;   total processes:      15\n;   max active processes: 12\n;   max children reached: 0\n;\n; By default the status page output is formatted as text&#x2F;plain. Passing either\n; &#39;html&#39;, &#39;xml&#39; or &#39;json&#39; in the query string will return the corresponding\n; output syntax. Example:\n;   http:&#x2F;&#x2F;www.foo.bar&#x2F;status\n;   http:&#x2F;&#x2F;www.foo.bar&#x2F;status?json\n;   http:&#x2F;&#x2F;www.foo.bar&#x2F;status?html\n;   http:&#x2F;&#x2F;www.foo.bar&#x2F;status?xml\n;\n; By default the status page only outputs short status. Passing &#39;full&#39; in the\n; query string will also return status for each pool process.\n; Example:\n;   http:&#x2F;&#x2F;www.foo.bar&#x2F;status?full\n;   http:&#x2F;&#x2F;www.foo.bar&#x2F;status?json&amp;full\n;   http:&#x2F;&#x2F;www.foo.bar&#x2F;status?html&amp;full\n;   http:&#x2F;&#x2F;www.foo.bar&#x2F;status?xml&amp;full\n; The Full status returns for each process:\n;   pid                  - the PID of the process;\n;   state                - the state of the process (Idle, Running, ...);\n;   start time           - the date and time the process has started;\n;   start since          - the number of seconds since the process has started;\n;   requests             - the number of requests the process has served;\n;   request duration     - the duration in µs of the requests;\n;   request method       - the request method (GET, POST, ...);\n;   request URI          - the request URI with the query string;\n;   content length       - the content length of the request (only with POST);\n;   user                 - the user (PHP_AUTH_USER) (or &#39;-&#39; if not set);\n;   script               - the main script called (or &#39;-&#39; if not set);\n;   last request cpu     - the %cpu the last request consumed\n;                          it&#39;s always 0 if the process is not in Idle state\n;                          because CPU calculation is done when the request\n;                          processing has terminated;\n;   last request memory  - the max amount of memory the last request consumed\n;                          it&#39;s always 0 if the process is not in Idle state\n;                          because memory calculation is done when the request\n;                          processing has terminated;\n; If the process is in Idle state, then informations are related to the\n; last request the process has served. Otherwise informations are related to\n; the current request being served.\n; Example output:\n;   ************************\n;   pid:                  31330\n;   state:                Running\n;   start time:           01&#x2F;Jul&#x2F;2011:17:53:49 +0200\n;   start since:          63087\n;   requests:             12808\n;   request duration:     1250261\n;   request method:       GET\n;   request URI:          &#x2F;test_mem.php?N&#x3D;10000\n;   content length:       0\n;   user:                 -\n;   script:               &#x2F;home&#x2F;fat&#x2F;web&#x2F;docs&#x2F;php&#x2F;test_mem.php\n;   last request cpu:     0.00\n;   last request memory:  0\n;\n; Note: There is a real-time FPM status monitoring sample web page available\n;       It&#39;s available in: &#x2F;usr&#x2F;local&#x2F;share&#x2F;php&#x2F;fpm&#x2F;status.html\n;\n; Note: The value must start with a leading slash (&#x2F;). The value can be\n;       anything, but it may not be a good idea to use the .php extension or it\n;       may conflict with a real PHP file.\n; Default Value: not set\npm.status_path &#x3D; &#x2F;fpm-status\n</code></pre>\n\n<p>以上配置开启了监控.</p>\n<p>使用<a href=\"https://github.com/hipages/php-fpm_exporter\"><code>php-fpm-exporter</code></a>来暴露数据给<code>prometheus</code>拉取查看运行情况.</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n# 使用 unix 通信 启动 \n&#x2F;usr&#x2F;local&#x2F;bin&#x2F;php-fpm-exporter server --phpfpm.scrape-uri &quot;unix:&#x2F;&#x2F;&#x2F;dev&#x2F;shm&#x2F;php-cgi.sock;&#x2F;fpm-status&quot; --phpfpm.fix-process-count true\n# 使用 tcp 通信 启动\n&#x2F;usr&#x2F;local&#x2F;bin&#x2F;php-fpm-exporter server --phpfpm.scrape-uri &quot;tcp:&#x2F;&#x2F;127.0.0.1:9000&#x2F;status&quot; --phpfpm.fix-process-count true\n</code></pre>\n\n<p>查看 <code>Running</code> <code>Idle</code> 数据.可以看到服务一般同时运行的数量,一般同时运行的数量都是比较少的.不足 <code>10</code> 个.</p>\n<p><img src=\"/images/pasted-10.png\" alt=\"upload successful\"></p>\n<p>如果响应比较慢就会发现同时运行的数量会攀升.部分慢接口会导致整个服务都会被拖垮.</p>\n<p><img src=\"/images/pasted-11.png\" alt=\"upload successful\"></p>\n<p>一般接口都要设置服务端的超时和客户端的超时控制.</p>\n<p>服务端可以通过<code>PHP_REQUEST_TERMINATE_TIMEOUT</code> 控制请求的执行时长.<br>客户端可以通过设置 <code>connect_timeout</code> <code>read_timeout</code> 等限制接口的执行时长.<br>避免慢接口堵塞请求导致服务大面积超时.</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">;;输出到控制台\nENV PHP_ERROR_LOG&#x3D;&quot;&#x2F;proc&#x2F;self&#x2F;fd&#x2F;2&quot; \nENV PHP_RLIMIT_FILES&#x3D;51200\nENV PHP_RLIMIT_CORE&#x3D;0\nENV PHP_USER&#x3D;www-data\nENV PHP_GROUP&#x3D;www-data\nENV PHP_LISTEN&#x3D;0.0.0.0:9000\nENV PHP_PM&#x3D;static\nENV PHP_PM_MAX_CHILDREN&#x3D;20\nENV PHP_PM_START_SERVERS&#x3D;4\nENV PHP_PM_MIN_SPARE_SERVERS&#x3D;2\nENV PHP_PM_MAX_SPARE_SERVERS&#x3D;10\nENV PHP_PM_PROCESS_IDLE_TIMEOUT&#x3D;10s\n;;请求超时 10000 次重启 fpm 进程\nENV PHP_PM_MAX_REQUESTS&#x3D;10000\nENV PHP_SLOWLOG&#x3D;&quot;&#x2F;proc&#x2F;self&#x2F;fd&#x2F;2&quot;\n;;慢接口时长\nENV PHP_REQUEST_SLOWLOG_TIMEOUT&#x3D;&quot;2s&quot;\n;;请求最大执行时长\nENV PHP_REQUEST_TERMINATE_TIMEOUT&#x3D;&quot;120s&quot;\n;;cli 模式脚本最大执行时长\nENV PHP_MAX_EXECUTION_TIME&#x3D;600\nENV PHP_MAX_INPUT_TIME&#x3D;60\n;; cli内存限制\nENV PHP_MEMORY_LIMIT&#x3D;384M\nENV PHP_ERROR_REPORTING&#x3D;&quot;E_ALL &amp; ~E_DEPRECATED &amp; ~E_STRICT&quot;\n;;不输出日志\nENV PHP_ACCESS_LOG&#x3D;&quot;&#x2F;dev&#x2F;null&quot;</code></pre>\n\n<h2 id=\"高峰时期接口超时\"><a href=\"#高峰时期接口超时\" class=\"headerlink\" title=\"高峰时期接口超时\"></a>高峰时期接口超时</h2><p>1 查看<code>php-fpm</code>数量是否不够<br>2 <code>cpu</code>是否不够<br>3 查看 socket 连接是否不够</p>\n<p>之前我们系统迁移<code>kubernetes</code>低峰时期运行良好.高峰时期会阶段性的连接超时.<br>经过排查,发现是 socket 连接数不够用了.我们服务大多是短连接,占用较多的连接数.大量连接数在<code>TIME_WAIT</code>.<br>导致无可用<code>socket</code>来建立连接.出现接口大量超时.由于我们没有关注<code>connect_timeout</code>.排查起来非常困难.<br>后来使用<code>pod</code>里面的<code>init_container</code>来动态修改内核参数.一般修改网络相关的参数.<br>参考如下:</p>\n<p>有部分参数由于<code>腾讯云虚拟节点</code>的限制无法修改,所以只改了部分参数.<br>修改完之后我们连接超时的问题就消失了.</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n#!&#x2F;bin&#x2F;sh\n\necho &quot;start optimize&quot;\n\nsysctl -w net.ipv4.tcp_max_syn_backlog&#x3D;16384\nsysctl -w net.ipv4.tcp_max_tw_buckets&#x3D;32768\nsysctl -w net.core.somaxconn&#x3D;32768\nsysctl -w net.ipv4.ip_local_port_range&#x3D;&quot;10000 61000&quot;\n\necho &quot;optimize done&quot;\n</code></pre>\n\n<h2 id=\"关于日志收集\"><a href=\"#关于日志收集\" class=\"headerlink\" title=\"关于日志收集\"></a>关于日志收集</h2><p>为了便于请求日式的收集,慢接口的日志收集.我们选择将所有的日志使用<code>json</code>的格式输出到控制台上.</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>php-fpm</code>的慢接口日志无法修改格式</p></blockquote>\n<p><code>kubernetes</code>会将所有容器的控制台日志保存在文件里.我们通过<code>daemonsets</code>在每个节点部署<code>filebeat</code>收集日志并发送到<code>elasticsearch</code>.</p>\n","feature":true,"text":"镜像编译基础镜像编译github repo 基础镜像编译使用环境变量替换配置. FROM php:7.2-fpm-alpine # replace repositories RUN sed -i &#39;s&#x2F;dl-cdn.alpinelinux.org&#x2F;mi...","link":"","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%95%9C%E5%83%8F%E7%BC%96%E8%AF%91\"><span class=\"toc-text\">镜像编译</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F%E7%BC%96%E8%AF%91\"><span class=\"toc-text\">基础镜像编译</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E9%95%9C%E5%83%8F%E7%BC%96%E8%AF%91\"><span class=\"toc-text\">服务镜像编译</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#php%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91\"><span class=\"toc-text\">php业务代码编译</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%BC%80%E6%89%93%E5%8C%85\"><span class=\"toc-text\">分开打包</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%88%E5%B9%B6%E6%89%93%E5%8C%85\"><span class=\"toc-text\">合并打包</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%95%9C%E5%83%8F%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">镜像部署</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#nginx-%E5%92%8C-php-fpm-%E5%8D%95%E7%8B%AC%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">nginx 和 php-fpm 单独部署</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#nginx-%E5%92%8C-php-fpm-%E9%83%A8%E7%BD%B2%E5%88%B0%E5%90%8C%E4%B8%80%E4%B8%AA-pod\"><span class=\"toc-text\">nginx 和 php-fpm 部署到同一个 pod</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#nginx-%E5%92%8C-php-fpm-%E5%85%B1%E5%90%8C%E6%89%93%E5%8C%85%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%80%E4%B8%AA-pod\"><span class=\"toc-text\">nginx 和 php-fpm 共同打包部署到一个 pod</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C\"><span class=\"toc-text\">程序运行</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#php-fpm-pm-%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">php-fpm pm 管理配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AB%98%E5%B3%B0%E6%97%B6%E6%9C%9F%E6%8E%A5%E5%8F%A3%E8%B6%85%E6%97%B6\"><span class=\"toc-text\">高峰时期接口超时</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86\"><span class=\"toc-text\">关于日志收集</span></a></li></ol></li></ol>","author":{"name":"tusimo","slug":"tusimo","avatar":"https://avatars.githubusercontent.com/u/4344635?v=4","link":"https://github.com/tusimo","description":"Think like an artist, code like an artisan.","socials":{"github":"https://tusimo.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Istio 无法支持 HTTP1.0 和访问接口存在延迟的解决办法","uid":"8c86b39e74b792721702587f520ee80d","slug":"Istio无法支持-HTTP1-0-和访问接口存在延迟的解决办法","date":"2022-08-10T06:24:00.000Z","updated":"2022-08-11T08:41:54.468Z","comments":true,"path":"api/articles/Istio无法支持-HTTP1-0-和访问接口存在延迟的解决办法.json","keywords":"coding","cover":"http://www.designerspics.com/wp-content/uploads/2014/12/paper_plane_free_photo.jpg","text":"现象Rancher 通过 RKE 部署了 K8S 集群后,启动了 Istio,由于一些项目使用的事 HTTP/1.0协议,访问出现问题. Istio 默认只支持 HTTP/1.1 以上协议版本，并不支持 HTTP/1.0。 原因Istio 默认不支持 HTTP1.0 协议 Ist...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Kubernetes","slug":"Kubernetes","count":1,"path":"api/categories/Kubernetes.json"}],"tags":[{"name":"RKE","slug":"RKE","count":1,"path":"api/tags/RKE.json"},{"name":"Rancher","slug":"Rancher","count":1,"path":"api/tags/Rancher.json"},{"name":"Istio","slug":"Istio","count":1,"path":"api/tags/Istio.json"},{"name":"HTTP","slug":"HTTP","count":1,"path":"api/tags/HTTP.json"},{"name":"Kubernetes","slug":"Kubernetes","count":1,"path":"api/tags/Kubernetes.json"},{"name":"Envoy","slug":"Envoy","count":1,"path":"api/tags/Envoy.json"}],"author":{"name":"tusimo","slug":"tusimo","avatar":"https://avatars.githubusercontent.com/u/4344635?v=4","link":"https://github.com/tusimo","description":"Think like an artist, code like an artisan.","socials":{"github":"https://tusimo.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}